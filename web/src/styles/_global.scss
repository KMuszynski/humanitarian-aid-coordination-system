* {
  margin: 0;
  box-sizing: border-box;

  &::before,
  &::after {
    box-sizing: border-box;
  }
}

html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  margin: 0;
  overflow-x: hidden;
  color: $gray-900;
  min-height: 100%;
}

// To create skeleton UI automatically add "data-loadable" attribute to element that should appear as a skeleton when data is loading
// and wrap the component in an element with "skeleton" class name

.skeleton {
  pointer-events: none;
  opacity: 0.6;
}

:where([data-loadable]) {
  border-radius: $border-radius-medium;
}

.skeleton [data-loadable] {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: $gray-light-200;
    z-index: 1;
  }

  &::after {
    content: '';
    position: absolute;
    z-index: 2;
    inset: 0;
    background: linear-gradient(90deg, $gray-light-200 8%, #fff 18%, $gray-light-200 33%);
    background-size: 200% 100%;
    animation: 1.5s shine linear infinite;
  }
}

@keyframes shine {
  to {
    background-position-x: -200%;
  }
}
